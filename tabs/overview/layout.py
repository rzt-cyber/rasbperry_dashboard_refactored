from dash import html, dcc
import dash_bootstrap_components as dbc
from .filters import create_overview_filters
from .calculations import OverviewCalculations
from .charts import OverviewCharts
from components.kpi_cards import create_kpi_card


class OverviewTab:
    def __init__(self, data_manager):
        self.data_manager = data_manager
        self.calculations = OverviewCalculations(data_manager)
        self.charts = OverviewCharts(data_manager)

    def get_layout(self):
        return html.Div(
            [
                create_overview_filters(self.data_manager),
                dbc.Row(
                    [
                        dbc.Col(
                            [
                                html.H2(
                                    "üìä –û–±—â–∏–π –æ–±–∑–æ—Ä –±–∏–∑–Ω–µ—Å–∞", className="page-title"
                                ),
                                html.P(
                                    "–ö–ª—é—á–µ–≤—ã–µ –º–µ—Ç—Ä–∏–∫–∏ –∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞ –ú–∞–ª–∏–Ω–∫–∞",
                                    className="page-subtitle",
                                ),
                            ]
                        )
                    ],
                    className="mb-4",
                ),
                dbc.Row(
                    [
                        dbc.Col(create_kpi_card("–û–±—â–∏–π –¥–æ—Ö–æ–¥", "0 ‚ÇΩ"), width=2),
                        dbc.Col(create_kpi_card("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–∫–∞–∑–æ–≤", "0"), width=2),
                        dbc.Col(create_kpi_card("–°—Ä–µ–¥–Ω–∏–π —á–µ–∫", "0 ‚ÇΩ"), width=2),
                        dbc.Col(create_kpi_card("–ê–∫—Ç–∏–≤–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏", "0"), width=2),
                        dbc.Col(create_kpi_card("–†–∞—Å—Ö–æ–¥—ã –Ω–∞ —Ä–µ–∫–ª–∞–º—É", "0 ‚ÇΩ"), width=2),
                        dbc.Col(create_kpi_card("ROMI", "0%"), width=2),
                    ],
                    className="mb-4",
                    id="overview-kpi-cards",
                ),
                dbc.Row(
                    [
                        dbc.Col([dcc.Graph(id="overview-sales-trend-chart")], width=6),
                        dbc.Col([dcc.Graph(id="overview-category-chart")], width=6),
                    ],
                    className="mb-4",
                ),
                dbc.Row(
                    [
                        dbc.Col(
                            [dcc.Graph(id="overview-top-products-chart")], width=12
                        ),
                    ]
                ),
                dcc.Store(
                    id="overview-filters-store",
                    data={
                        "start_date": None,
                        "end_date": None,
                        "regions": ["all"],
                        "categories": ["all"],
                    },
                ),
            ],
            className="tab-container",
        )

    def register_callbacks(self, app):
        from .callbacks import register_overview_callbacks

        register_overview_callbacks(
            app, self.data_manager, self.calculations, self.charts
        )
